http {
  upstream wcc-frontend {
		server host.docker.internal:5173;
    server frontend:3000;
  }

  upstream wcc-ml {
    server ml:8101;
  }

  server {
    listen 443 ssl;
	  ssl_certificate /ssl/local.host.crt;
	  ssl_certificate_key /ssl/local.host.key;
	  ssl_protocols TLSv1.2 TLSv1.3;
	  ssl_ciphers "ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:DHE-RSA-AES256-CCM:DHE-RSA-AES256-CCM8:ECDHE-RSA-ARIA256-GCM-SHA384:DHE-RSA-ARIA256-GCM-SHA384:!DSS";
	  ssl_prefer_server_ciphers on;

    server_name local.host;

    location / {
		  proxy_pass http://wcc-frontend;
		}

    location /__hmr {
      proxy_pass http://wcc-frontend;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto https;
      proxy_read_timeout 86400; # neccessary to avoid websocket timeout disconnect
      proxy_redirect off;
		}

    location /ml {
		  proxy_pass http://wcc-ml;
		}
  }
}

events {
}
